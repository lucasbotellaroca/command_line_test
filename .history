pwd
ls
ls -la
echo $SHELL
ls
echo $SHELL
echo $TERM
whoami
echo $HOME
echo 'hola'
echo $1==1
echo $USER
clear
date
fecha = date
echo "hoy es el dia `date`"
cd Dat/shell
cd Data/shell
cat Text_example.txt
cd ..
ls -l
clear
git
git clone https://www.github.com/IgorAramb/DS_CL_files.git
ls
cd DS_CL_files
ls -l
cat README.md
rm README.md
git reset HEAD --hard
man
man ls
ls --help
gitconfig--global user.name 'Lucas Botella'
git config --global user.name 'Lucas Botella'
git config --global user.email 'Lucas Botella'
git config --global user.email 'lucasbotellaroca@gmail.com'
cd ..
ls
git clone https://github.com/lucasbotellaroca/master-kschool.git
ls
cd master-kschool
touch nuevoarchivo
touch nuevoarchivo2
ls
rm README.md
git status
git add nuevoarchivo2
git status
git commit -m 'Implement a random forest'
git status
git push
git config --global user.name "Lucas Botella" 
git config --global user.email "lucasbotellaroca@gmail.com"
ls -l
cat .gitconfig
ls -la
cat .gitconfig
ls
mkdir Repos
ls
cd Repos
git clone https://www.github.com/lucasbotellaroca/master-kschool.git
cd ..
ls
ll
cd Repos
ll
git init Master_class_local_start
ll
git init otro_dir_name
ll
cd 
cd Repos
cd Master_class_local_start
git status
ls -la
cat .git
cd Repos
cd ..
ls -la
cd ..
cd Repos
ls -LA
cd master-kschool
cd ..
cd otro_dir_name
cd ..
cd Master_class_local_start/
cd ..
cd Master_class_local_start/
git status
touch first_file.txt
touch second_file
gedit first_file.txt
cat first_file
cat first_file.txt
git add first_file.txt
git status
git add second_file
git status
git commit -m "first commit"
git status
git log
gedit first_file.txt
git status 
git add -u
git status
git commit
cd Repos
ls
cd Master_class_lcal_start
cd Master_class_local_start
git status
git commit
git log
git commit -m "hola"
git status
ls
gedit second_file
git status
git commit -m "new upate"
gid add second_file
git add second_file
git commit -m "new update"
git status
git log
git remote add origin https://github.com/lucasbotellaroca/Local_init.git
git branch -M master
git push -u origin master
cat .history
 cd $home
cat .history
cd Repos
git clone https://github.com/lucasbotellaroca/command_line_test.git
ls
cd command_line_test
cp ~/.history ./
ll
ls -la
git add .history
git commit -m "first 5h of master"
git add .history
git status
git commit -m "first 5h of master"
ll
cp ~/.history History
ls -l
ls -la
git push
cd
mkdir first_dir
cd first_dir
cat > text_file.txt
ls
cd first_di
cd first_dir
ls
cat text_file.txt
ls -la
chmod g+x, o+x
chmod g+x, o+x text_file.txt
chmod --help
ls -la
chmod 373 text_file.txt
ls -la
mod text_file.txt
chmod 373 text_file.txt
ls -la
chmod 777 text_file.txt
ls -la
chmod 373 text_file.txt
ls -la
chmod 676 text_file.txt
ls -la
mkdir sub1
mkdir sub2
mkdir text_file
cp text_file.txt sub1
ls 
cd sub1
ls
cd ..
cp text_file.txt sub2 text_file.txt.2
ls
chmod 776 text_file.txt
ls -la
cd sub1
chmod 776 text_file.txt
ls -la
cd ..
cp text_file.txt sub2/text_file.txt.2
ls
cd sub2
ls
cd ..
cp sub1 sub3
ls
cp -r sub1 sub3
ls
sub3
cd sub3
ls
cd ..
cd sub1
ls
cd ..
mv first_dir /sub2/text_file.txt.2 first_dir /sub2/text_file.txt.backup
mv first_dir/sub2/text_file.txt.2 first_dir/sub2/text_file.txt.backup
ls
cd sub2
ls
cd ..
mv first_dir/sub2/text_file.txt.2 first_dir/sub2/text_file.txt.backup
mv sub2/text_file.txt.2 sub2/text_file.txt.backup
ls
cd sub2
ls
cd ..
mv sub2/text_file.txt.backup ./.first_dir
ls -la
ls -la sub2
rm -rf  sub2
ls
cd Repos
cd ..
cd Repos
ls
cd command_line_test
cp ~/.history .
git add -u
git commit -m "quick exercise --> $(date)"
cd
cd Repos/command_line_test
alias gc = 'git commit -m'
alias gc='git commit -m'
ls -la
cd 
ls -la
cat .zshrc
which ll
sudo which python
which python
where is python
whereis python
cd Data/shell
ls
head -5 Text_example.txt | wc
head -5 Text_example.txt | wc -w
head -5 Finn.txt | wc -w
tail -20 ~/.history > last_20_commands
cat last_20_commands
cat "#This file is created by $USER on:$(date)"
cat "#This file is created by $USER on:$(date)" > new_file
echo "#This file is created by $USER on:$(date)"
echo "#This file is created by $USER on:$(date)" > new_file
new_file
ls
cat new_file
find
find .
find -maxdepth 5 -type f -name "text_file*" -exec ls -l {} \; 
find -maxdepth 5 -type f -iname "text_file*" -exec ls -l {} \; 
find -maxdepth 5 -type f -iname "text_example*" -exec ls -l {} \; 
find -maxdepth 5 -type f -name "text_example*" -exec ls -l {} \; 
find -maxdepth 5 -type f -iname "text_example*"; 
find -maxdepth 5 -type f -name "text_example*" -exec ls -l {} \; 
find -maxdepth 5 -type f -iname "text_example*" -exec ls -l {} \; 
ls -l Text_example.txt
cd
find . -mmin 60
find . -size 0K 
find . -size 0
find . -size 0 -exec  
find . -empty
find . -type f -mmin -60
find . -type f -empty ! -perm 777
cd Data
ls | sort -S
ls | sort
find . -type f -exec ls -l | sort {} \; -exec head -3 {} \;
find . -type f -exec ls | sort {} \; -exec head -3 {} \;
find . -type f -exec ls {} | sort \; -exec head -3 {} \;
find . -type f -exec ls {} \; -exec | sort {} \; -exec head -3 {} \;
ls -S
ls -l
ls -S
ls
find . -type f -exex ls -S {} \; -exec tail -3 {} \;
find . -type f -exec ls -S {} \; -exec tail -3 {} \;
find . -type f -exec ls -lS {} \; -exec head -3 {} \;
find . -type f -exec ls -lS {} \; -exec head -3 \;
find . -mindepth 1 -type d 
cd Data
find . -mindepth 1 -type d 
find . -mindepth 1 -type d -exec echo {} \;  -exec ls -S {} \;
cd ../Repos
ls
cd command_line_test/
cp ~/.history .
git add
git add -u
git status
git push
ls
cp ~/.history .
